C FILE: SORT_MOD35.F
C USE f2py -m sort_mod35 -c SORT_MOD35.F TO GENERATE .SO FILE
       SUBROUTINE TEST(N, VALID_X, VALID_Y,
     & N_1, LATS, LONS, LATS_IDX, LONS_IDX, 
     & CLDS,
     & CUMU_CLD, CUMU_TOT,
     & CLD_NUM, TOT_NUM)


C     NUMBER OF VALID SAMPLE (N) AND CORRESPONDING INDEXES
      INTEGER N
      INTEGER, DIMENSION(N) :: VALID_X, VALID_Y


C     NUMBER OF IMAGE HEIGHT AND CORRESPONDING LAT/LON (INDEXES)
      INTEGER N_1
      REAL, DIMENSION(N_1, 1354) :: LATS, LONS, LATS_IDX, LONS_IDX


C     GRANULE CLOUD DATA
      REAL, DIMENSION(N_1, 1354, 2) :: CLDS


C     CUMULATIVE DAILY CLOUD DATA
      INTEGER(4), DIMENSION(360, 720) :: CUMU_CLD, CUMU_TOT


C     OUTPUT ARRAY
      INTEGER(4), DIMENSION(360, 720) :: CLD_NUM, TOT_NUM


C     INTERNAL USE INDEXES
      INTEGER ISAMPLE, I, J, IDX_X, IDX_Y
      REAL ILAT, ILON, ILAT_PRE
      INTEGER INUM, ICLD
      INTEGER, DIMENSION(2) :: IMSK


Cf2py intent(in) n, n_1
Cf2py intent(in) valid_x, valid_y 
Cf2py intent(in) lats, lons, lats_idx, lons_idx
Cf2py intent(in) clds
Cf2py intent(in) cumu_cld, cumu_tot
Cf2py depend(n) valid_x, valid_y
Cf2py depend(n_1) lats, lons, lats_idx, lons_idx, clds
Cf2py intent(out) cld_num, tot_num


      DO ISAMPLE = 1, N

C     ADD 1 SINCE FORTRAN STARTS FROM 1 WHILE LATS_IDX/LONS_IDX WERE 
C     GENERATED BY PYTHON.
          I = VALID_Y(ISAMPLE) + 1
          J = VALID_X(ISAMPLE) + 1

          ILAT = LATS(I, J)
          IF (I.EQ.1) THEN
              ILAT_PRE = ILAT
          ELSE
              ILAT_PRE = LATS(I-1, J)
          ENDIF
          ILON = LONS(I, J)
          IMSK = CLDS(I, J, :)



C     FETCH INDEXES IN THE OUTPUT ARRAY.
C     ADD 1 DUE TO FORTRAN STARTS FROM 1 WHILE LATS_IDX/LONS_IDX WERE 
C     GENERATED BY PYTHON.
          IDX_Y = LATS_IDX(I, J) + 1
          IDX_X = LONS_IDX(I, J) + 1



C     CHECK LATLON ARRAY
          IF (ILAT.GE.ILAT_PRE .OR. ILAT.LE.-999. .OR. ILON.LE.-999
     & .OR. IDX_Y.EQ.361 .OR. IDX_X.EQ.721) THEN
              CYCLE
          ENDIF


C     CHECK CLD_MASK ARRAY
C     ICLD .EQ. 0 means CLOUDY
          IF (IMSK(1).EQ.1 .AND. IMSK(2).EQ.0) THEN
              INUM = 1
              ICLD = 1
          ELSE IF (IMSK(1).EQ.1 .AND. IMSK(2).EQ.3) THEN
              INUM = 1
              ICLD = 0
          ELSE
              INUM = 0
              ICLD = 0
          ENDIF


C     ADD TO OUTPUT ARRAY
          TOT_NUM(IDX_Y, IDX_X) = TOT_NUM(IDX_Y, IDX_X) + INUM
          CLD_NUM(IDX_Y, IDX_X) = CLD_NUM(IDX_Y, IDX_X) + ICLD

      ENDDO


      TOT_NUM = TOT_NUM + CUMU_TOT
      CLD_NUM = CLD_NUM + CUMU_CLD


      END
C END FILE SORT_MOD35.F
